<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>东风微鸣 Blog - 拨测</title><link>https://www.EWhisper.cn/</link><description>Focus on Python/Java/DevOps/Observability</description><lastBuildDate>Wed, 19 Jun 2019 19:26:20 +0800</lastBuildDate><item><title>NGINX 配置SSL 支持</title><link>https://www.EWhisper.cn/nginx-conf-add-ssl-support.html</link><description>&lt;p&gt;&lt;img alt="nginx+ssl" src="./images/nginx-ssl-certificate.jpg"&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;前言&lt;a class="headerlink" href="#_1" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.EWhisper.cn/tencentyun-apply-ssl-certificate.html"&gt;上篇文章&lt;/a&gt;中, 我们已经申请好了SSL证书. 那么现在, 我们就要配置全站SSL了! &lt;img align="absmiddle" alt="💪" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f4aa.png" title=":muscle:" width="20px"&gt;&lt;img align="absmiddle" alt="💪" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f4aa.png" title=":muscle:" width="20px"&gt;&lt;img align="absmiddle" alt="💪" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f4aa.png" title=":muscle:" width="20px"&gt;&lt;/p&gt;
&lt;p&gt;这次的工作主要是NGINX的配置, 同时会有一些我的博客本身的配置.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;博客本身配置更改包括: (这篇文章就先不细说了)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网页内链接全部从http改为https(其实配置下SITEURL, 工具会自动生成好) 并重新发布. (特别要注意, 如果有的站内css, js等没有用https就尴尬了, 会被各类浏览器拦截掉, 并提示"不安全的脚本")&lt;/li&gt;
&lt;li&gt;网站有用到的第三方工具(如拨测), 把网站的地址改为 https开头的.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id="nginx"&gt;NGINX配置&lt;a class="headerlink" href="#nginx" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;首先, 创建并上传准备好的证书文件到指定目录: (crt和key文件)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo mkdir -p /etc/pki/nginx/
&lt;span class="c1"&gt;# 通过sftp上传到该目录&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;进行nginx.conf 的ssl配置, 本次主要涉及到server块的配置更改, 如下: (具体的指令作用见注释)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;listen&lt;/span&gt;       &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;server_name&lt;/span&gt;  &lt;span class="s"&gt;www.ewhisper.cn&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="s"&gt;https://&lt;/span&gt;&lt;span class="nv"&gt;$host$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;listen&lt;/span&gt;       &lt;span class="mi"&gt;443&lt;/span&gt; &lt;span class="s"&gt;ssl&lt;/span&gt; &lt;span class="s"&gt;http2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;server_name&lt;/span&gt;  &lt;span class="s"&gt;www.ewhisper.cn&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;root&lt;/span&gt;         &lt;span class="s"&gt;/usr/share/nginx/html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# 静态博客的存放位置&lt;/span&gt;

        &lt;span class="kn"&gt;ssl_certificate&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/etc/pki/nginx/1_www.ewhisper.cn_bundle.crt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# 证书路径&lt;/span&gt;
        &lt;span class="kn"&gt;ssl_certificate_key&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/etc/pki/nginx/2_www.ewhisper.cn.key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# 证书密钥路径&lt;/span&gt;
        &lt;span class="kn"&gt;ssl_session_cache&lt;/span&gt; &lt;span class="s"&gt;shared:SSL:50m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# ssl session cache分配50m空间, 缓存ssl session&lt;/span&gt;
        &lt;span class="kn"&gt;ssl_session_timeout&lt;/span&gt;  &lt;span class="s"&gt;1d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# ssl session 超时时间为1天&lt;/span&gt;
        &lt;span class="kn"&gt;ssl_session_tickets&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# ssl session ticket 机制, 部分版本有bug, 视情况开启.&lt;/span&gt;

        &lt;span class="kn"&gt;ssl_protocols&lt;/span&gt; &lt;span class="s"&gt;TLSv1.2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# ssl 协议版本&lt;/span&gt;
        &lt;span class="kn"&gt;ssl_ciphers&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# ssl ciphers&lt;/span&gt;
        &lt;span class="kn"&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# 倾向于使用server端的ciphers&lt;/span&gt;

        &lt;span class="c1"&gt;# HSTS 6 months&lt;/span&gt;
        &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;Strict-Transport-Security&lt;/span&gt; &lt;span class="s"&gt;max-age=15768000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="c1"&gt;# 添加个http header, 告诉浏览器直接转到https, 此功能有风险, 慎重选择. &lt;/span&gt;
        &lt;span class="c1"&gt;# (比如你的证书过期忘记续了, 那么用户想转到http都没办法)&lt;/span&gt;

        &lt;span class="kn"&gt;ssl_stapling&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# 启用ssl OCSP stapling功能, 服务端主动查询OCSP结果, 提高TLS效率&lt;/span&gt;
        &lt;span class="kn"&gt;ssl_stapling_verify&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# 开启OCSP stapling 验证&lt;/span&gt;

        &lt;span class="c1"&gt;# Load configuration files for the default server block.&lt;/span&gt;
        &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/default.d/*.conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;# 我的博客的location在这里配置&lt;/span&gt;

        &lt;span class="c1"&gt;#location / {&lt;/span&gt;
        &lt;span class="c1"&gt;#}&lt;/span&gt;

        &lt;span class="kn"&gt;error_page&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt; &lt;span class="s"&gt;/404.html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/40x.html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kn"&gt;error_page&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mi"&gt;502&lt;/span&gt; &lt;span class="mi"&gt;503&lt;/span&gt; &lt;span class="mi"&gt;504&lt;/span&gt; &lt;span class="s"&gt;/50X.html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/50X.html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;img align="absmiddle" alt="📓" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f4d3.png" title=":notebook:" width="20px"&gt; 说明:&lt;/p&gt;
&lt;p&gt;以上的某些指令, 我先大概介绍下, 后续会有文章做详细介绍.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;return 301 https://$host$request_uri;&lt;/code&gt;   HTTP的全部永久重定向到https对应的URL&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/share/nginx/html&lt;/code&gt;  静态博客的存放位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_timeout  1d;&lt;/code&gt;  ssl session 超时时间为1天&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_tickets off;  #&lt;/code&gt;  ssl session ticket 机制, 部分版本有bug, 视情况开启.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_prefer_server_ciphers on;&lt;/code&gt;  倾向于使用server端的ciphers&lt;/li&gt;
&lt;li&gt;HSTS功能:　添加个HTTP header, 告诉浏览器直接转到https, &lt;img align="absmiddle" alt="❗" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/2757.png" title=":exclamation:" width="20px"&gt;此功能有风险, 慎重选择.  (比如你的证书过期忘记续了, 那么用户想转到HTTP都没办法)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_stapling on;&lt;/code&gt;  启用ssl OCSP stapling功能, 服务端主动查询OCSP结果, 提高TLS握手效率&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/nginx/default.d/*.conf;&lt;/code&gt;  我的博客&lt;code&gt;location&lt;/code&gt;配置&lt;br&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img align="absmiddle" alt="📓" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f4d3.png" title=":notebook:" width="20px"&gt; 小技巧:&lt;/p&gt;
&lt;p&gt;火狐浏览器背后的基金会, 开源了一个非常好用的工具: &lt;a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/"&gt;ssl-config-generator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在这上边, 点一点就可以自动生成推荐的SSL配置了.&lt;/p&gt;
&lt;p&gt;&lt;img alt="ssl-config-generator" src="./images/ssl-config-generator.png"&gt;&lt;/p&gt;
&lt;p&gt;提一点, 如上图所示, 第二列一定要根据你的客户浏览器或客户端的版本使用情况慎重选择. &lt;/p&gt;
&lt;p&gt;比如, 用户还在用Windows XP, IE6, Java 6, 那么只能选择Old.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来, 就是要重启nginx来生效了. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo nginx -t  &lt;span class="c1"&gt;# 测试配置, 没问题再重启&lt;/span&gt;
$ sudo systemctl reload nginx.service
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启后, 测试发现 css js都没有生效. &lt;img align="absmiddle" alt="😱" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f631.png" title=":scream:" width="20px"&gt;&lt;img align="absmiddle" alt="😱" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f631.png" title=":scream:" width="20px"&gt;&lt;img align="absmiddle" alt="😱" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f631.png" title=":scream:" width="20px"&gt;&lt;/p&gt;
&lt;p&gt;因为之前nginx刚配置过缓存. 当时脑子没转过来, 没有第一时间意识到可能是浏览器缓存的问题. 就直接nginx stop 再start了下. 结果悲催的我的网站可用性就从100%跌到99.81%了.&lt;/p&gt;
&lt;p&gt;&lt;img alt="网站可用性" src="images/index.png"&gt;&lt;/p&gt;
&lt;p&gt;后来终于意识到可能是浏览器缓存的问题了, 清理了缓存后, 再启动, 终于页面显示正常, 图标也从"不安全"变成了小锁.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./images/ssl-ewhisper.png"&gt;&lt;/p&gt;
&lt;p&gt;测试访问http://www.ewhisper.cn, 也会被强制转到 https://www.ewhisper.cn. 完美!&lt;img align="absmiddle" alt="🎉" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f389.png" title=":tada:" width="20px"&gt;&lt;img align="absmiddle" alt="🎉" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f389.png" title=":tada:" width="20px"&gt;&lt;img align="absmiddle" alt="🎉" class="emojione" height="20px" src="https://cdn.jsdelivr.net/emojione/assets/4.0/png/64/1f389.png" title=":tada:" width="20px"&gt;&lt;/p&gt;
&lt;h2 id="ssl"&gt;我的SSL评级&lt;a class="headerlink" href="#ssl" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;再来介绍个好东西 - &lt;a href="https://www.ssllabs.com/ssltest/analyze.html"&gt;SSL Labs&lt;/a&gt;. 可以对你的网站进行SSL 安全评级. &lt;/p&gt;
&lt;p&gt;点击链接, 输入网站地址, 喝杯茶, 结果就出来了 - &lt;strong&gt;A+&lt;/strong&gt; 哈哈哈哈哈!!!!&lt;/p&gt;
&lt;p&gt;&lt;img alt="我的网站SSL评分" src="./images/ewhisper-ssl-report.png"&gt;&lt;/p&gt;
&lt;p&gt;最后附上我的&lt;a href="https://www.EWhisper.cn/assets/SSL_Server_Test_ www.ewhisper.cn.pdf"&gt;完整报告&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">东风微鸣</dc:creator><pubDate>Wed, 19 Jun 2019 19:26:20 +0800</pubDate><guid isPermaLink="false">tag:www.ewhisper.cn,2019-06-19:/nginx-conf-add-ssl-support.html</guid><category>nginx</category><category>ssl</category><category>拨测</category><category>可用性</category></item></channel></rss>